
//Para generar una colisi√≥n :
//GARG310307JEO
//AIRA540126V9K

import java.io.FileNotFoundException;
import java.io.IOException;
import java.text.Normalizer;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.showConfirmDialog;
import static javax.swing.JOptionPane.showMessageDialog;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Carlos
 */
public class BusquedaRFC extends javax.swing.JFrame {

    /**
     * Creates new form BusquedaRFC
     */
    public BusquedaRFC() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setSize(940, 830);
        m = (DefaultTableModel) tblRFC.getModel();
        c = (DefaultTableModel) tblColisiones.getModel();
        
        llenarTablas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtRFC = new javax.swing.JTextField();
        btnGenerarAl = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRFC = new javax.swing.JTable();
        lblNomT = new javax.swing.JLabel();
        lblApPT = new javax.swing.JLabel();
        lblApMT = new javax.swing.JLabel();
        lblFNT = new javax.swing.JLabel();
        btnGuardar = new javax.swing.JButton();
        txtNom = new javax.swing.JTextField();
        txtAP = new javax.swing.JTextField();
        txtFN = new javax.swing.JTextField();
        txtAM = new javax.swing.JTextField();
        btnGenerarBN = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblColisiones = new javax.swing.JTable();
        btnBuscar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("RFC");
        setBackground(new java.awt.Color(78, 170, 110));
        setSize(new java.awt.Dimension(1000, 1000));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(69, 178, 251));
        jPanel1.setOpaque(false);

        jLabel1.setFont(new java.awt.Font("Leelawadee UI", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(245, 245, 245));
        jLabel1.setText("REGISTRO FEDERAL DE CONTRIBUYENTES");

        btnGenerarAl.setFont(new java.awt.Font("Leelawadee UI", 1, 14)); // NOI18N
        btnGenerarAl.setForeground(new java.awt.Color(245, 245, 245));
        btnGenerarAl.setText("RFC Aleatorio");
        btnGenerarAl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(245, 245, 245), 3));
        btnGenerarAl.setContentAreaFilled(false);
        btnGenerarAl.setOpaque(false);
        btnGenerarAl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarAlActionPerformed(evt);
            }
        });

        tblRFC.setFont(new java.awt.Font("Leelawadee UI", 0, 14)); // NOI18N
        tblRFC.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "RFC", "Nombre", "Apellido Paterno", "Apellido Materno", "Fecha de Nacimiento"
            }
        ));
        jScrollPane1.setViewportView(tblRFC);

        lblNomT.setFont(new java.awt.Font("Leelawadee UI", 1, 18)); // NOI18N
        lblNomT.setForeground(new java.awt.Color(245, 245, 245));
        lblNomT.setText("Nombre:");

        lblApPT.setFont(new java.awt.Font("Leelawadee UI", 1, 18)); // NOI18N
        lblApPT.setForeground(new java.awt.Color(245, 245, 245));
        lblApPT.setText("Apellido Paterno:");

        lblApMT.setFont(new java.awt.Font("Leelawadee UI", 1, 18)); // NOI18N
        lblApMT.setForeground(new java.awt.Color(245, 245, 245));
        lblApMT.setText("Apellido Materno:");

        lblFNT.setFont(new java.awt.Font("Leelawadee UI", 1, 18)); // NOI18N
        lblFNT.setForeground(new java.awt.Color(245, 245, 245));
        lblFNT.setText("Fecha de Nacimiento:");

        btnGuardar.setFont(new java.awt.Font("Leelawadee UI", 1, 14)); // NOI18N
        btnGuardar.setForeground(new java.awt.Color(245, 245, 245));
        btnGuardar.setText("Guardar");
        btnGuardar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(245, 245, 245), 3));
        btnGuardar.setContentAreaFilled(false);
        btnGuardar.setOpaque(false);
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        txtNom.setNextFocusableComponent(txtAP);

        txtAP.setNextFocusableComponent(txtAM);
        txtAP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAPActionPerformed(evt);
            }
        });

        txtAM.setNextFocusableComponent(txtFN);
        txtAM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAMActionPerformed(evt);
            }
        });

        btnGenerarBN.setFont(new java.awt.Font("Leelawadee UI", 1, 14)); // NOI18N
        btnGenerarBN.setForeground(new java.awt.Color(245, 245, 245));
        btnGenerarBN.setText("Generar");
        btnGenerarBN.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(245, 245, 245), 3));
        btnGenerarBN.setContentAreaFilled(false);
        btnGenerarBN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarBNActionPerformed(evt);
            }
        });

        tblColisiones.setFont(new java.awt.Font("Leelawadee UI", 0, 14)); // NOI18N
        tblColisiones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "RFC", "Nombre", "Apellido Paterno", "Apellido Materno", "Fecha de Nacimiento"
            }
        ));
        jScrollPane2.setViewportView(tblColisiones);

        btnBuscar.setFont(new java.awt.Font("Leelawadee UI", 1, 14)); // NOI18N
        btnBuscar.setForeground(new java.awt.Color(245, 245, 245));
        btnBuscar.setText("Buscar");
        btnBuscar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(245, 245, 245), 3));
        btnBuscar.setContentAreaFilled(false);
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnSalir.setFont(new java.awt.Font("Leelawadee UI", 1, 14)); // NOI18N
        btnSalir.setForeground(new java.awt.Color(245, 245, 245));
        btnSalir.setText("Salir");
        btnSalir.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(245, 245, 245), 3));
        btnSalir.setContentAreaFilled(false);
        btnSalir.setOpaque(false);
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Leelawadee UI", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(245, 245, 245));
        jLabel2.setText("RFC:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(107, 107, 107)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(lblApPT)
                                                    .addComponent(lblNomT))
                                                .addGap(7, 7, 7))
                                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(12, 12, 12)
                                                .addComponent(txtRFC, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(11, 11, 11)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(txtAP, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(txtNom, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addGap(11, 11, 11))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(lblApMT)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtAM, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(14, 14, 14))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblFNT)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtFN, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnGenerarAl, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addComponent(btnGenerarBN, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(59, 59, 59)
                                .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jScrollPane1)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(99, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(87, 87, 87)
                .addComponent(jLabel1)
                .addGap(44, 44, 44)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(btnGenerarAl, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnGenerarBN, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtRFC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(32, 32, 32)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblNomT)
                                .addComponent(txtNom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblApPT)
                                .addComponent(txtAP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblApMT)
                            .addComponent(txtAM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(8, 8, 8)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblFNT)
                            .addComponent(txtFN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(105, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 930, 830);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bg4.png"))); // NOI18N
        getContentPane().add(jLabel3);
        jLabel3.setBounds(0, 0, 940, 830);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGenerarAlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarAlActionPerformed
        try {
            generarRFC();
        } catch (IOException ex) {
            Logger.getLogger(BusquedaRFC.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnGenerarAlActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
      
        if(txtRFC.getText().equals("") || txtNom.getText().equals("") || txtAP.getText().equals("") || txtAM.getText().equals("") || txtFN.getText().equals("")){ showMessageDialog(this, "Campos vac√≠os"); return;}
        
        int pos = hash(txtRFC.getText());
        
        if(!m.getValueAt(pos, 0).toString().equals(" ")){
            if(!c.getValueAt(pos, 0).toString().equals(" "))pos++;
            c.setValueAt(txtRFC.getText(), pos, 0);
            c.setValueAt(txtNom.getText(), pos, 1);
            c.setValueAt(txtAP.getText(), pos, 2);
            c.setValueAt(txtAM.getText(), pos, 3);
            c.setValueAt(txtFN.getText(), pos, 4);
            tblColisiones.changeSelection(pos, pos, false, false);
        }else{
            m.setValueAt(txtRFC.getText(), pos, 0);
            m.setValueAt(txtNom.getText(), pos, 1);
            m.setValueAt(txtAP.getText(), pos, 2);
            m.setValueAt(txtAM.getText(), pos, 3);
            m.setValueAt(txtFN.getText(), pos, 4);
            tblRFC.changeSelection(pos, pos, false, false);
        }
        
        txtRFC.setText("");
        txtAP.setText("");
        txtAM.setText("");
        txtNom.setText("");
        txtFN.setText("");
        
        System.out.println("****"+hash(txtRFC.getText())+"******");
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void txtAMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAMActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAMActionPerformed

    private void btnGenerarBNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarBNActionPerformed
        if(txtRFC.getText().equals("") || txtNom.getText().equals("") || txtAP.getText().equals("") || txtAM.getText().equals("") || txtFN.getText().equals("")){ showMessageDialog(this, "Campos vac√≠os"); return;}
        String pc = primerosCuatroCaracteresRFC(txtNom.getText(), txtAP.getText(), txtAM.getText());
        String fn[] = txtFN.getText().split("\\-");
        String mnc = generarMonoclave();
        String a = fn[2].substring(2, 4);
        txtRFC.setText(pc+a+fn[1]+fn[0]+mnc);
    }//GEN-LAST:event_btnGenerarBNActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        int pos = hash(txtRFC.getText());
        
        if(m.getValueAt(pos, 0)==null){
            if(c.getValueAt(pos, 0)==null){
                showMessageDialog(this,"No existe."); 
                return;
            }
        }
        
        if(m.getValueAt(pos, 0)!=null && m.getValueAt(pos, 0).toString().equals(txtRFC.getText())){
            txtRFC.setText("");
            txtAP.setText("");
            txtAM.setText("");
            txtNom.setText("");
            txtFN.setText("");
        
            txtRFC.setText(m.getValueAt(pos, 0).toString());
            txtAP.setText(m.getValueAt(pos, 2).toString());
            txtAM.setText(m.getValueAt(pos, 3).toString());
            txtNom.setText(m.getValueAt(pos, 1).toString());
            txtFN.setText(m.getValueAt(pos, 4).toString());
            tblRFC.changeSelection(pos, pos, false, false);
        }else{
            txtRFC.setText("");
            txtAP.setText("");
            txtAM.setText("");
            txtNom.setText("");
            txtFN.setText("");
        
            txtRFC.setText(c.getValueAt(pos, 0).toString());
            txtAP.setText(c.getValueAt(pos, 2).toString());
            txtAM.setText(c.getValueAt(pos, 3).toString());
            txtNom.setText(c.getValueAt(pos, 1).toString());
            txtFN.setText(c.getValueAt(pos, 4).toString());
            tblColisiones.changeSelection(pos, pos, false, false);
        }
        
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        cerrar();
    }//GEN-LAST:event_btnSalirActionPerformed

    public void cerrar(){
        guardarArchivos();
        guardarCol();
        System.exit(0);
    }
    
    private void txtAPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAPActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        int res = showConfirmDialog(this, "¬øDesea guardar los datos?", "Cerrando ventana", JOptionPane.YES_NO_OPTION);
        if(res==0){
            cerrar();
        }
    }//GEN-LAST:event_formWindowClosing

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BusquedaRFC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BusquedaRFC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BusquedaRFC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BusquedaRFC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BusquedaRFC().setVisible(true);
            }
        });
    }
    
    public int hash(String rfc){
        int n = 0;
        
        for (int i = 0; i < rfc.length(); i++) {
            n+=(rfc.charAt(i))*3;
            System.out.println(n);
        }
        
        System.out.println("------"+n+"------");
        
        return (n%1555)/15;
    }
    
    public String generarRFC() throws IOException{
        String rfc="";
        int n = R.nextInt(39)+1;
        //if(n==0) n=1;
        String reg="";
        
        try {
            fe = new java.io.FileReader("ListaNombres.txt");
            br=new java.io.BufferedReader(fe);
            
            for (int i = 0; i < n; i++) {
                reg=br.readLine();
            }
            
            String R[] = reg.split("\\|");
            
            String pc = primerosCuatroCaracteresRFC(R[2], R[0], R[1]);
            String monoclave="", fechaN="", a√±o, dia, mes;
            Random A  = new Random();
            
            int a = A.nextInt(89)+10;
            a√±o = ""+a;
            int m = A.nextInt(12);
            if(m==0)m++;
            if(m<10)mes ="0"+m;
            else mes =""+m;
            int d = A.nextInt(D[m]);
            if(d<10)dia = "0"+d;
            else dia = ""+d;
            
            fechaN=a√±o+mes+dia;
            
            monoclave=generarMonoclave();
            
            rfc = pc+fechaN+monoclave;
            
            txtRFC.setText(rfc);
                        
            txtAP.setText(R[0]);
            txtAM.setText(R[1]);
            txtNom.setText(R[2]);
            txtFN.setText(dia+"-"+mes+"-"+"19"+a√±o);
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(BusquedaRFC.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        return rfc;
    }
    
    public String generarMonoclave(){
        String mono="";
        Random A  = new Random();
        int num; 
        
        for (int i = 0; i < 3; i++) {
                
                boolean bueno;
                do{
                    num = A.nextInt(100);
                    if((num>=49 && num<=57) || (num>=65 && num<=90))bueno = true;
                    else bueno = false;
                    
                }while(!bueno);
                
                char c = (char) num;
                mono+=c;
            }
        
        return mono;
    }
    
    public void guardarArchivos(){
        
        try { 
            fs=new java.io.FileWriter("rfc_g.txt");
              for (int i = 0; i < m.getRowCount(); i++) {
                  if(m.getValueAt(i, 0)!=null)rfc=new RFC(m.getValueAt(i, 0).toString(),m.getValueAt(i, 1).toString(),m.getValueAt(i, 2).toString(),m.getValueAt(i, 3).toString(),m.getValueAt(i, 4).toString());
                  else rfc=new RFC(" "," "," "," "," ");
                  rfc.guardar(fs);
              }
              
            
        } catch (IOException ex) {
             showMessageDialog(this, ex.getMessage());
        }
       
        
       
    }
    
    public void guardarCol(){
        try {
            fileWr = new java.io.FileWriter("col.txt");
            for (int i = 0; i < 100; i++) {
                if(c.getValueAt(i, 0)!=null)colision = new RFC(c.getValueAt(i, 0).toString(), c.getValueAt(i, 1).toString(), c.getValueAt(i, 2).toString(), c.getValueAt(i, 3).toString(), c.getValueAt(i, 4).toString());
                else colision = new RFC(" ", " ", " ", " ", " ");
                
                colision.guardar(fileWr);
            }
        } catch (IOException ex) {
            Logger.getLogger(BusquedaRFC.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void llenarTablas(){
        try {
            FileRead = new java.io.FileReader("rfc_g.txt");
            coli = new java.io.FileReader("col.txt");
            buff = new java.io.BufferedReader(FileRead);
            buffcol = new java.io.BufferedReader(coli);
            String rfc = "", colis="";
            
            for (int i = 0; i < 100; i++) {
                rfc=buff.readLine().toString();
                colis=buffcol.readLine();
                String G[] = rfc.split("\\:");
                String R[] = colis.split("\\:");
                
                //System.out.println(R.length);
                
                m.setValueAt(G[0], i, 0);
                m.setValueAt(G[1], i, 1);
                m.setValueAt(G[2], i, 2);
                m.setValueAt(G[3], i, 3);
                m.setValueAt(G[4], i, 4);
                
                c.setValueAt(R[0], i, 0);
                c.setValueAt(R[1], i, 1);
                c.setValueAt(R[2], i, 2);
                c.setValueAt(R[3], i, 3);
                c.setValueAt(R[4], i, 4);
            }
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(BusquedaRFC.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(BusquedaRFC.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }
    
    public static String primerosCuatroCaracteresRFC(String nombre, String apellidoPaterno, String apellidoMaterno)
    {
        //Eliminar acentos y llevar a may√∫sculas
        nombre = eliminarAcentosYSimbolos(nombre);
        apellidoPaterno = eliminarAcentosYSimbolos(apellidoPaterno);
        apellidoMaterno = eliminarAcentosYSimbolos(apellidoMaterno);

        //Nombre: Omitir palabras que no se utilizan, MARIA, JOSE y compuestos, y obtener las 2 primeras letras
        Pattern pattern = Pattern.compile("\\A(?:(?:MARIA|JOSE) )?+(?:(?:DEL?|L(?:AS?|OS)|M(?:AC|[CI])|V[AO]N|Y)\\b ?)*+([A-Z&]?)([A-Z&]?)");
        final Matcher matcherNom = pattern.matcher(nombre);
        matcherNom.find();

        //Apellido: Omitir palabras que no se utilizan, y obtener la primera letra y la vocal interna (si el apellido tiene m√°s de 2 letras)
        pattern = Pattern.compile("\\A(?:(?:DEL?|L(?:AS?|OS)|M(?:AC|[CI])|V[AO]N|Y)\\b ?)*+(([A-Z&]?)[B-DF-HJ-NP-TV-Z&]*([AEIOU]?)[A-Z&]?)");
        final Matcher matcherPat = pattern.matcher(apellidoPaterno);
        matcherPat.find();

        final Matcher matcherMat = pattern.matcher(apellidoMaterno);
        matcherMat.find();

        //LETRAS
        //Obtener vocal de apellido paterno y letra(s) del nombre
        String letraPat = matcherPat.group(2);
        String letraMat = matcherMat.group(2);
        String letraNom = matcherNom.group(1);
        String rfc;
        if (letraPat.isEmpty() || letraMat.isEmpty()) {
            //Si no tiene alguno de los apellidos (paterno o materno), se toma la primera y segunda letra del apellido que tiene
            //y el 4to caracter ser√° la segunda letra del nombre.
            rfc = (matcherPat.group(1) + matcherMat.group(1)).substring(0,2) + letraNom + matcherNom.group(2);
        }
        else if (matcherPat.group(1).length() > 2)
        {
            String vocal = matcherPat.group(3);
            //Cuando el apellido paterno no tiene vocales, se utiliza una X.
            if (vocal.isEmpty())
                vocal = "X";
            rfc = letraPat + vocal + letraMat + letraNom;
        } 
        else
        {
            //Si el apellido paterno tiene 1 o 2 letras, no se toma la primera vocal,
            //y el 4to caracter es la segunda letra del nombre.
            rfc = letraPat + letraMat + letraNom + matcherNom.group(2);
        }


        //Cuando las 4 letras resulten en una palabra inconveniente (regla 9), se modifica la √∫ltima letra a una X
        if (rfc.matches("BUE[IY]|C(?:A[CGK][AO]|O(?:GE|J[AEIO])|ULO)|FETO|GUEY|JOTO|K(?:A(?:[CG][AO]|KA)|O(?:GE|JO)|ULO)|M(?:AM[EO]|E(?:A[RS]|ON)|ION|OCO|ULA)|P(?:E(?:D[AO]|NE)|UT[AO])|QULO|R(?:ATA|UIN)"))
            return rfc.substring(0,3) + "X";
        else
        return rfc;
    }

    public static String eliminarAcentosYSimbolos(String s)
    {
        s = Normalizer.normalize(s.replaceAll("[√ë√±]","&"), Normalizer.Form.NFD);
        s = s.replaceAll("[^&A-Za-z ]", "");
        return s.trim().toUpperCase();
    }
    

    Random R = new Random();
    int D[] = {00,31,28,31,30,31,30,31,31,30,31,30,31};
    private java.io.FileWriter fs, fc, fileWr; 
    private java.io.FileReader fe, FileRead, coli; 
    private java.io.BufferedReader br, buff, buffcol;
    DefaultTableModel m, c;
    RFC rfc, colision;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnGenerarAl;
    private javax.swing.JButton btnGenerarBN;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblApMT;
    private javax.swing.JLabel lblApPT;
    private javax.swing.JLabel lblFNT;
    private javax.swing.JLabel lblNomT;
    private javax.swing.JTable tblColisiones;
    private javax.swing.JTable tblRFC;
    private javax.swing.JTextField txtAM;
    private javax.swing.JTextField txtAP;
    private javax.swing.JTextField txtFN;
    private javax.swing.JTextField txtNom;
    private javax.swing.JTextField txtRFC;
    // End of variables declaration//GEN-END:variables
}

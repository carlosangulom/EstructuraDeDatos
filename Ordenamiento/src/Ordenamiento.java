
import java.util.Random;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author SB-D1
 */
public class Ordenamiento extends javax.swing.JFrame {

    /**
     * Creates new form Ordenamiento
     */
    public Ordenamiento() {
        initComponents();
        this.setLocationRelativeTo(null);
        m=(DefaultTableModel)tblDato.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnLlenar = new javax.swing.JButton();
        txtTam = new javax.swing.JTextField();
        btnBubble = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDato = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        btnQS = new javax.swing.JButton();
        btnShell = new javax.swing.JButton();
        btnRadix = new javax.swing.JButton();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnLlenar.setText("Llenar");
        btnLlenar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLlenarActionPerformed(evt);
            }
        });

        btnBubble.setText("Bubble Sort");
        btnBubble.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBubbleActionPerformed(evt);
            }
        });

        tblDato.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "Dato"
            }
        ));
        jScrollPane1.setViewportView(tblDato);

        jLabel2.setText("Tama√±o");

        btnQS.setText("QuickSort");
        btnQS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQSActionPerformed(evt);
            }
        });

        btnShell.setText("ShellSort");
        btnShell.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShellActionPerformed(evt);
            }
        });

        btnRadix.setText("RadixSort");
        btnRadix.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRadixActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTam))
                    .addComponent(btnLlenar, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnBubble, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnQS, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnShell, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnRadix, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBubble)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnQS)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnShell)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRadix))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtTam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addComponent(btnLlenar)
                        .addGap(11, 11, 11)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLlenarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLlenarActionPerformed
        // TODO add your handling code here:
        n= Integer.parseInt(txtTam.getText());
        A = new int[n];
        
        for (int i = 0; i < n; i++) {
            A[i]=r.nextInt(100)+2;            
        }
        
        llenarTabla();
    }//GEN-LAST:event_btnLlenarActionPerformed

    private void btnBubbleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBubbleActionPerformed
        // TODO add your handling code here:
        A=bubbleSort(A,A.length); llenarTabla();
    
    }//GEN-LAST:event_btnBubbleActionPerformed

    private void btnQSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQSActionPerformed
        // TODO add your handling code here:
        quickSort(A, 0, A.length-1); llenarTabla();
    }//GEN-LAST:event_btnQSActionPerformed

    private void btnShellActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShellActionPerformed
        // TODO add your handling code here:
        shellSort(A); llenarTabla();
    }//GEN-LAST:event_btnShellActionPerformed

    private void btnRadixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRadixActionPerformed
        // TODO add your handling code here:
        /*A=radixSort(A);
        for (int i = 0; i < A.length; i++) {
            System.out.println(A[i]);
        }
        System.out.println("--------------");*/
        int m = A[0];
        radix(A, m);
        llenarTabla();
    }//GEN-LAST:event_btnRadixActionPerformed

    private void llenarTabla(){
        m.setRowCount(n);
        for (int i = 0; i < n; i++) {
            m.setValueAt((i+1), i, 0);
            m.setValueAt(A[i], i, 1);
        }
    }
    
    public int[] bubbleSort(int A[], int n){
    
        for (int p = 1; p<n; p++) {
            for (int i = 0; i < n-p; i++) {
                if(A[i]>A[i+1]){
                    int aux = A[i]; 
                    A[i]=A[i+1];
                    A[i+1]=aux;
                }
            }
        }
        return A;
    }
    
    public int[] radixSort(int A[]){
        int n = A.length;
        int m=A[0];
        ListaSimpleEnt L[] = new ListaSimpleEnt[10];
        for (int i = 1; i < n; i++)if(A[i]>m) m=A[i];
        for (int i = 0; i < 10; i++) L[i] = new ListaSimpleEnt();
        int d=(m+"").length();
        //for (int p = 1; p <= d; p++) {
            for (int i = 0; i < n; i++)L[A[i]%10].insert(A[i]);
            
        int a=0;
        for (int i = 0; i < 10; i++) {
            for (NodoEnt nod = L[i].getInicio(); nod!=null; nod=nod.getSig()) {
                A[a++]=L[i].getDatoN(nod);
            }
        }
        //}
        return A;
    }
    
     public void radix(int A[],int m){
        int d=(m+"").length();  int j=1; int aux1=10;
        int aux[]=new int[A.length];
        while(j<=d){
            ListaSimpleEnt l[] = {new ListaSimpleEnt(),new ListaSimpleEnt(),new ListaSimpleEnt(),new ListaSimpleEnt(),new ListaSimpleEnt(),new ListaSimpleEnt(),new ListaSimpleEnt(),new ListaSimpleEnt(),new ListaSimpleEnt(),new ListaSimpleEnt()};
            for (int i = 0; i < A.length; i++) {
                if(j==1)l[A[i]%10].insert(A[i]);
                else if(aux[i]!=0)l[aux[i]%10].insert(A[i]);
                else l[aux[i]].insert(A[i]);
            }
            int a=0; 
            for (int i = 0; i < 10; i++){
                for (NodoEnt k = l[i].getInicio(); k != null; k=k.getSig()) {
                    A[a]=l[i].getDatoN(k);aux[a]=l[i].getDatoN(k)/aux1; a++;
                  }  
            }
            j++;
            aux1*=10;
        }
    }
    
    public static void quickSort(int A[], int izq, int der) {

        int pivote=A[izq]; // tomamos primer elemento como pivote
        int i=izq; // i realiza la b√∫squeda de izquierda a derecha
        int j=der; // j realiza la b√∫squeda de derecha a izquierda
        int aux;

        while(i<j){            // mientras no se crucen las b√∫squedas
           while(A[i]<=pivote && i<j) i++; // busca elemento mayor que pivote
           while(A[j]>pivote) j--;         // busca elemento menor que pivote
           if (i<j) {                      // si no se han cruzado                      
               aux= A[i];                  // los intercambia
               A[i]=A[j];
               A[j]=aux;
           }
         }
         A[izq]=A[j]; // se coloca el pivote en su lugar de forma que tendremos
         A[j]=pivote; // los menores a su izquierda y los mayores a su derecha
         if(izq<j-1)
            quickSort(A,izq,j-1); // ordenamos subarray izquierdo
         if(j+1 <der)
            quickSort(A,j+1,der); // ordenamos subarray derecho
    }
    
    public static void shellSort(int A[]){
        int salto, aux, i;
        boolean cambios;
        for(salto=A.length/2; salto!=0; salto/=2){
           cambios=true;
           while(cambios){ // Mientras se intercambie alg√∫n elemento
                cambios=false;
                for(i=salto; i< A.length; i++) // se da una pasada
                    if(A[i-salto]>A[i]){ // y si est√°n desordenados
                        aux=A[i]; // se reordenan
                        A[i]=A[i-salto];
                        A[i-salto]=aux;
                        cambios=true; // y se marca como cambio.
                    }
                }
        }
        
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ordenamiento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ordenamiento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ordenamiento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ordenamiento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ordenamiento().setVisible(true);
            }
        });
    }
    
    private int A[], n=0;
    private DefaultTableModel m;
    private Random r = new Random();

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBubble;
    private javax.swing.JButton btnLlenar;
    private javax.swing.JButton btnQS;
    private javax.swing.JButton btnRadix;
    private javax.swing.JButton btnShell;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblDato;
    private javax.swing.JTextField txtTam;
    // End of variables declaration//GEN-END:variables
}
